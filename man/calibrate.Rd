% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate.R
\name{calibrate}
\alias{calibrate}
\title{Estimate model parameters from data}
\usage{
calibrate(
  start_date = min(data$date) - start_date_offset,
  start_date_offset = 15,
  end_date = max(data$date),
  time_args = list(params_timevar = data.frame(Date = c("2020-03-23", "2020-03-30",
    "2020-04-01"), Symbol = rep("beta0", 3), Relative_value = c(-1, NA, NA))),
  base_params,
  data,
  opt_pars = list(params = c(log_E0 = 4, log_beta0 = -1), logit_time_params = c(-1,
    -1), log_nb_disp = NULL),
  fixed_pars = NULL,
  sim_fun = run_sim_break,
  sim_args = NULL,
  aggregate_args = NULL,
  condense_args = NULL,
  priors = NULL,
  debug = FALSE,
  debug_plot = FALSE,
  debug_hist = FALSE,
  last_debug_plot = FALSE,
  use_DEoptim = FALSE,
  mle2_method = "Nelder-Mead",
  mle2_control = list(maxit = 10000),
  mle2_args = list(),
  seed = NULL,
  DE_args = list(),
  DE_lwr = NULL,
  DE_upr = NULL,
  DE_cores = getOption("mc.cores", 2)
)
}
\arguments{
\item{start_date}{starting date for sims (far enough back to allow
states to sort themselves out)}

\item{start_date_offset}{days to go back before first data value}

\item{end_date}{ending date}

\item{time_args}{arguments passed to \code{sim_fun}}

\item{base_params}{baseline parameters (an object (vector?) of
type \code{params_pansim} containing all of the parameters
needed for a simulation; some may be overwritten during the
calibration process)}

\item{data}{a data set to compare to, containing date/var/value
(current version assumes that only a single state var is
included)}

\item{opt_pars}{starting parameters (and structure).  Parameters
that are part of the \code{params_pansim} parameter vector can
be specified within the \code{params} element (with prefixes
if they are transformed); other parameters can include
distributional parameters or time-varying parameters}

\item{fixed_pars}{parameters to fix}

\item{sim_fun}{function for simulating a single run
(e.g. \code{\link{run_sim_break}},
\code{\link{run_sim_mobility}})}

\item{sim_args}{additional arguments to pass to
\code{\link{run_sim}}}

\item{aggregate_args}{arguments passed to
\code{\link{aggregate.pansim}}}

\item{condense_args}{arguments to pass to \code{\link{condense}}
(via \code{\link{run_sim}}) [not implemented yet?]}

\item{priors}{a list of tilde-delimited expressions giving prior
distributions expressed in terms of the elements of
\code{opt_pars},
e.g. \code{list(~dlnorm(rel_beta0[1],meanlog=-1,sd=0.5))}}

\item{debug}{print debugging messages?}

\item{debug_plot}{plot debugging curves? (doesn't work with
parallel DEoptim)}

\item{debug_hist}{keep information on parameter history?}

\item{last_debug_plot}{plot debugging curve for \emph{only} last
parameter set (stored in \code{.debug_plot.pdf} in current
directory)}

\item{use_DEoptim}{use differential evolution as first stage?}

\item{mle2_method}{method arg for mle2}

\item{mle2_control}{control args for mle2}

\item{mle2_args}{additional arguments for mle2}

\item{seed}{random-number seed (for DE)}

\item{DE_args}{arguments for \code{\link{DEoptim}}}

\item{DE_lwr}{lower bounds for DE optimization}

\item{DE_upr}{upper bounds, ditto}

\item{DE_cores}{number of parallel workers for DE}
}
\description{
Given time series data and a set of starting
parameters/structure/etc., calibrate the model via negative
binomial maximum likelihood estimation (MLE), simultaneously
fitting initial conditions, initial growth rate, time-changes in
growth rate, and dispersion parameters.
}
\details{
\code{\link[bbmle]{mle2}}
is used to estimate parameters by trajectory matching.
Differential evolution optimization is conducted
via \code{\link[DEoptim]{DEoptim}}.
}
\examples{
library(dplyr)
params <- fix_pars(read_params("ICU1.csv"))
 opt_pars <- list(params=c(log_E0=4, log_beta0=-1,
        log_mu=log(params[["mu"]]), logit_phi1=qlogis(params[["phi1"]])),
                                  logit_rel_beta0=c(-1,-1),
                                   log_nb_disp=NULL)
dd <- (ont_all \%>\% trans_state_vars() \%>\% filter(var \%in\% c("report", "death", "H")))
\dontrun{
  cal1 <- calibrate(data=dd, base_params=params, opt_pars=opt_pars, debug_plot=TRUE)
  cal1_DE <- calibrate(data=dd, base_params=params, opt_pars=opt_pars, use_DEoptim=TRUE, DE_cores=1)
  cal2 <- calibrate(data=dd, base_params=params, opt_pars=opt_pars, use_DEoptim=TRUE)
  if (require(bbmle)) {
     -logLik(cal2$mle2)
   }
   attr(cal2,"de")$optim$bestval
}
}
\seealso{
Other classic_macpan: 
\code{\link{add_d_log}()},
\code{\link{add_updated_vaxrate}()},
\code{\link{aggregate_agecats}()},
\code{\link{calibrate_comb}()},
\code{\link{check_age_cat_compatibility}()},
\code{\link{check_contact_rate_setting}()},
\code{\link{col_multiply}()},
\code{\link{condense_age}()},
\code{\link{condense_params_vax}()},
\code{\link{condense_state}()},
\code{\link{condense_vax}()},
\code{\link{dev_is_tikz}()},
\code{\link{do_step}()},
\code{\link{expand_params_age}()},
\code{\link{expand_params_desc_age}()},
\code{\link{expand_params_desc_variant}()},
\code{\link{expand_params_desc_vax}()},
\code{\link{expand_params_mistry}()},
\code{\link{expand_params_variant}()},
\code{\link{expand_params_vax}()},
\code{\link{expand_state_age}()},
\code{\link{expand_state_vax}()},
\code{\link{expand_stateval_testing}()},
\code{\link{fix_pars}()},
\code{\link{fix_stored}()},
\code{\link{forecast_ensemble}()},
\code{\link{forecast_sim}()},
\code{\link{getData}()},
\code{\link{get_GI_moments}()},
\code{\link{get_Gbar}()},
\code{\link{get_R0}()},
\code{\link{get_doses_per_day}()},
\code{\link{get_evec}()},
\code{\link{get_kernel_moments}()},
\code{\link{get_opt_pars}()},
\code{\link{get_r}()},
\code{\link{invlink_trans}()},
\code{\link{make_betavec}()},
\code{\link{make_beta}()},
\code{\link{make_jac}()},
\code{\link{make_ratemat}()},
\code{\link{make_state}()},
\code{\link{make_test_wtsvec}()},
\code{\link{make_vaxrate}()},
\code{\link{mk_Nvec}()},
\code{\link{mk_agecats}()},
\code{\link{mk_contact_rate_setting}()},
\code{\link{mk_mistry_Nvec}()},
\code{\link{mk_pmat}()},
\code{\link{mk_vaxcats}()},
\code{\link{mle_fun}()},
\code{\link{non_expanded_states}},
\code{\link{rExp}()},
\code{\link{read_params}()},
\code{\link{repair_names_age}()},
\code{\link{restore}()},
\code{\link{run_sim_ageify}()},
\code{\link{run_sim_break}()},
\code{\link{run_sim_loglin}()},
\code{\link{run_sim_mobility}()},
\code{\link{run_sim_range}()},
\code{\link{run_sim}()},
\code{\link{show_ratemat}()},
\code{\link{testify}()},
\code{\link{texify}()},
\code{\link{trans_state_vars}()},
\code{\link{update_contact_rate_setting}()},
\code{\link{update_foi}()},
\code{\link{update_params_mistry}()},
\code{\link{vis_model}()},
\code{\link{write_params}()}
}
\concept{classic_macpan}
